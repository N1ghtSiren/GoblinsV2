---
--- Generated by Luanalysis
--- Created by Siren.
--- DateTime: 07.06.2023 9:16
---

---@class EventUnitBase<T>
---@field data T[]
---@field is_used boolean

---@generic T
---@return EventUnitBase<T>
function NewEventUnitBase()
  ---@type EventUnitBase<T>
  local eve = --[[---@type EventUnitBase<T>]]{}
  eve.data = {}
  eve.is_used = false;

  ---@param action T
  function eve:add(action)
    table.insert(self.data, action)
  end

  ---@type number[] | nil
  local remove_pool

  ---@param action T
  function eve:remove(action)
    -- if array is NOT being looped on right now - we can manage data
    -- else - wait till loop ends, then clear things
    if(self.is_used == false)then
      tableRemoveValue(self.data, action)
      return
    end

    --if pool not already exist, create it; needed when 1+ action are iterated on table
    if(remove_pool == nil)then
      remove_pool = {}

      TimerStart(CreateTimer(), 0.01, false, function()
        for _, v in rpairs(remove_pool)do
          table.remove(self.data, v)
        end
        remove_pool = nil
      end)
    end

    -- first value of key, also ignore existing ones
    local key = tableFindKeyByValue(self.data, action, remove_pool)

    if(key ~= nil)then
      table.insert(remove_pool, key)
    end
  end

  return eve
end