---
--- Generated by Luanalysis
--- Created by Siren.
--- DateTime: 06.06.2023 0:00
---

---@class player
---@field trig_list trigger[]
-- functions are grabbed because of explicit type in constructor

--region trigger actions
local function OnItemPickup()
  local it = GetManipulatedItem()
  local u = GetManipulatingUnit()

  printdf("unit %s picked item: %s", GetUnitName(u), GetItemName(it))

  local result = u:EquipItem(it)
  if(result == false) then return end

  local onItemPickup = it.events and it.events.onEquip
  if(onItemPickup ~= nil)then onItemPickup(it, u) end

end

local function OnItemDrop()
  local i = GetManipulatedItem()
  local u = GetManipulatingUnit()

  printdf("unit %s dropped item: %s", GetUnitName(u), GetItemName(i))
  --todo hook point
  u:DropItem(i)
end

local function OnUnitDamaging()
  local source = GetEventDamageSource()
  local target = GetEventDamageTarget()
  local damage_type = GetEventDamageType()

  if(damage_type == DAMAGE_TYPE_NORMAL)then
    source.events.onAttack:invoke(source, target)
  end

  target.events.onDoDamage:invoke(source, target)
end

local function OnUnitDamaged()
  local source = GetEventDamageSource()
  local caster = GetEventDamageTarget()
  local damage = GetEventDamage()

  --armour works as flat
  SetEventDamage(math.max(GetEventDamage() - GetUnitArmour(caster), 0))

  printdf("%s got %s from %s", caster, damage, source)
  --todo hook point
  caster.events.onGetDamage:invoke(caster, source)
end

local function OnUnitSpellEffect()
  local caster = GetTriggerUnit()
  local target = GetSpellTargetUnit()
  local abilityid = fourci(GetSpellAbilityId())

  printdf("%s casted %s on %s", caster, abilityid, target)
  --todo hook point
  caster.events.onCast:invoke(caster, target, abilityid)
end

local function OnUnitDeath()
  local killer = GetKillingUnit()
  local target = GetTriggerUnit()

  printdf("%s killed by %s", target, killer)
  --todo hook point
  killer.events.onKill:invoke(target, killer)

  target.events.onDeath:invoke(target, killer)
end

local function OnPlayerChat()
  local player = GetTriggerPlayer()
  local chat_str = GetEventPlayerChatString()

  ChatCommandList.Process(player, chat_str)
end

local function OnPlayerLeave()
  local p = GetTriggerPlayer()

  --todo hook point
  printdf("%s has left the game", GetPlayerName(p))
end
--endregion trigger actions


---@param player player
local function InitTriggers(player)
  player.trig_list = {}

  local trig_item_pick = CreateTrigger()
  table.insert(player.trig_list, trig_item_pick)
  TriggerRegisterPlayerUnitEvent(trig_item_pick, player, EVENT_PLAYER_UNIT_PICKUP_ITEM, nil)
  TriggerAddAction(trig_item_pick, OnItemPickup)

  local trig_item_drop = CreateTrigger()
  table.insert(player.trig_list, trig_item_drop)
  TriggerRegisterPlayerUnitEvent(trig_item_drop, player, EVENT_PLAYER_UNIT_DROP_ITEM, nil)
  TriggerAddAction(trig_item_drop, OnItemDrop)

  local trig_unit_damaging = CreateTrigger()
  table.insert(player.trig_list, trig_unit_damaging)
  TriggerRegisterPlayerUnitEvent(trig_unit_damaging, player, EVENT_PLAYER_UNIT_DAMAGING, nil)
  TriggerAddAction(trig_unit_damaging, OnUnitDamaging)

  local trig_unit_damaged = CreateTrigger()
  table.insert(player.trig_list, trig_unit_damaged)
  TriggerRegisterPlayerUnitEvent(trig_unit_damaged, player, EVENT_PLAYER_UNIT_DAMAGED, nil)
  TriggerAddAction(trig_unit_damaged, OnUnitDamaged)

  local trig_unit_spell_effect = CreateTrigger()
  table.insert(player.trig_list, trig_unit_spell_effect)
  TriggerRegisterPlayerUnitEvent(trig_unit_spell_effect, player, EVENT_PLAYER_UNIT_SPELL_EFFECT, nil)
  TriggerAddAction(trig_unit_spell_effect, OnUnitSpellEffect)

  local trig_unit_death= CreateTrigger()
  table.insert(player.trig_list, trig_unit_death)
  TriggerRegisterPlayerUnitEvent(trig_unit_death, player, EVENT_PLAYER_UNIT_DEATH, nil)
  TriggerAddAction(trig_unit_death, OnUnitDeath)

  local trig_player_chat= CreateTrigger()
  table.insert(player.trig_list, trig_player_chat)
  TriggerRegisterPlayerChatEvent(trig_player_chat, player, "", false)
  TriggerAddAction(trig_player_chat, OnPlayerChat)

  local trig_player_leave= CreateTrigger()
  table.insert(player.trig_list, trig_player_leave)
  TriggerRegisterPlayerEvent(trig_player_leave, player, EVENT_PLAYER_LEAVE)
  TriggerAddAction(trig_player_leave, OnPlayerLeave)
end

function InitPlayers()
  for i = 0, 15 do
    local player = Player(i)

    InitTriggers(player)
  end
end