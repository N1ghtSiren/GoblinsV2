---
--- Generated by Luanalysis
--- Created by Siren.
--- DateTime: 07.06.2023 2:12
---

---@alias statList table<statKey, number>

---@type statKey[]
local sorted_stat_keys

---@param action fun(k: statKey)
local function ForAllKeys(action)
  sorted_stat_keys = sorted_stat_keys or statDef.GetAllStatKeys()

  for _, v in ipairs(sorted_stat_keys)do
    action(v)
  end
end

---@return statList
local function GetEmptyStatsTemplate()
  ---@type statList
  local stat = {}

  ForAllKeys(function(k)
    stat[k] = 0
  end)

  return stat
end

---@param main statList
---@param delta statList
---@return integer, statKey[] amount of changed keys and table with all of them
local function Sum(main, delta)
  local changed_keys = {}

  for k, v in pairs(delta)do
    if(v == 0)then goto next end
    local old_v = main[k]
    main[k] = main[k] + delta[k]

    if(old_v ~= main[k])then table.insert(changed_keys, k) end
    ::next::
  end

  return #changed_keys, changed_keys
end


---@param main statList
---@param delta statList
---@return integer, statKey[] amount of changed keys and table with all of them
local function Sub(main, delta)
  local changed_keys = {}

  for k, v in pairs(delta)do
    if(v == 0)then goto next end
    local old_v = main[k]
    main[k] = main[k] - delta[k]

    if(old_v ~= main[k])then table.insert(changed_keys, k) end
    ::next::
  end

  return #changed_keys, changed_keys
end

stats = {
  Sum = Sum,
  Sub = Sub,
  GetEmptyStatsTemplate = GetEmptyStatsTemplate,
  ForAllKeys = ForAllKeys,
}